"use strict";(self.webpackChunkcode_tanks=self.webpackChunkcode_tanks||[]).push([[1107],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>p});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=c(n),p=i,y=m["".concat(l,".").concat(p)]||m[p]||u[p]||a;return n?r.createElement(y,o(o({ref:t},d),{},{components:n})):r.createElement(y,o({ref:t},d))}));function p(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8443:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=n(7462),i=(n(7294),n(3905));const a={sidebar_position:3},o="Physics & World",s={unversionedId:"tutorial-basics/physics-and-world",id:"tutorial-basics/physics-and-world",title:"Physics & World",description:"Coordinates & Directions",source:"@site/docs/tutorial-basics/physics-and-world.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/physics-and-world",permalink:"/website/docs/tutorial-basics/physics-and-world",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Anatomy",permalink:"/website/docs/tutorial-basics/anatomy"},next:{title:"Commands",permalink:"/website/docs/tutorial-basics/commands"}},l={},c=[{value:"Coordinates &amp; Directions",id:"coordinates--directions",level:2},{value:"Coordinate System",id:"coordinate-system",level:3},{value:"Rotational System",id:"rotational-system",level:3},{value:"Time and distance",id:"time-and-distance",level:2},{value:"Time measurement",id:"time-measurement",level:3},{value:"Distance measurement",id:"distance-measurement",level:3},{value:"Damage",id:"damage",level:2},{value:"Bullets",id:"bullets",level:3},{value:"Collisions",id:"collisions",level:2},{value:"Walls",id:"walls",level:3},{value:"Tanks",id:"tanks",level:3}],d={toc:c};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"physics--world"},"Physics & World"),(0,i.kt)("h2",{id:"coordinates--directions"},"Coordinates & Directions"),(0,i.kt)("h3",{id:"coordinate-system"},"Coordinate System"),(0,i.kt)("p",null,"Code Tanks uses a right-handed Y-up coordinate system for the game world."),(0,i.kt)("p",null,"It is easiest to explain in terms of 2D:"),(0,i.kt)("p",null,"The X axis goes from left to right (+X points right).\nThe Y axis goes from bottom to top (+Y points up).\nThe origin (X=0.0; Y=0.0) is at the center of the screen."),(0,i.kt)("h3",{id:"rotational-system"},"Rotational System"),(0,i.kt)("p",null,"Code Tanks uses a counter-clockwise direction convention in radians:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"North = 0 & 2\ud835\udf0b"),(0,i.kt)("li",{parentName:"ul"},"East = 3\ud835\udf0b/2"),(0,i.kt)("li",{parentName:"ul"},"South = \ud835\udf0b"),(0,i.kt)("li",{parentName:"ul"},"West = \ud835\udf0b/2")),(0,i.kt)("h2",{id:"time-and-distance"},"Time and distance"),(0,i.kt)("h3",{id:"time-measurement"},"Time measurement"),(0,i.kt)("p",null,'Code Tanks time is measured in "ticks". Each tank gets one turn to apply any commands they wish.'),(0,i.kt)("h3",{id:"distance-measurement"},"Distance measurement"),(0,i.kt)("p",null,"Code Tanks uses floating point numbers to make partial movements. For example, the tank can move at 100 meters / 60 ticks, which is ~1.667 meters per tick."),(0,i.kt)("h2",{id:"damage"},"Damage"),(0,i.kt)("h3",{id:"bullets"},"Bullets"),(0,i.kt)("p",null,"10"),(0,i.kt)("h2",{id:"collisions"},"Collisions"),(0,i.kt)("h3",{id:"walls"},"Walls"),(0,i.kt)("p",null,"10"),(0,i.kt)("h3",{id:"tanks"},"Tanks"),(0,i.kt)("p",null,"10"))}u.isMDXComponent=!0}}]);